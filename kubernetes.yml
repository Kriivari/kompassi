#############
# MEMCACHED #
#############
---
apiVersion: v1
kind: Service
metadata:
  name: memcached
  labels:
    stack: kompassi
    component: memcached
spec:
  ports:
  - port: 6379
    targetPort: 6379
  selector:
    stack: kompassi
    component: memcached

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: memcached
spec:
  selector:
    matchLabels:
      stack: kompassi
      component: memcached
  replicas: 1
  template:
    metadata:
      labels:
        stack: kompassi
        component: memcached
    spec:
      containers:
      - name: master
        image: memcached
        resources: {}
        ports:
        - containerPort: 6379


############
# RABBITMQ #
############
---
apiVersion: v1
kind: Service
metadata:
  name: rabbitmq
  labels:
    stack: kompassi
    component: rabbitmq
spec:
  ports:
  - port: 5672
    targetPort: 5672
  selector:
    stack: kompassi
    component: rabbitmq

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rabbitmq
spec:
  selector:
    matchLabels:
      stack: kompassi
      component: rabbitmq
  replicas: 1
  template:
    metadata:
      labels:
        stack: kompassi
        component: rabbitmq
    spec:
      containers:
      - name: master
        image: rabbitmq
        resources: {}
        ports:
        - containerPort: 5672
        env:
        - name: RABBITMQ_DEFAULT_VHOST
          value: kompassi
        - name: RABBITMQ_DEFAULT_PASS
          valueFrom:
            secretKeyRef:
              name: rabbitmq
              key: password
        - name: RABBITMQ_DEFAULT_USER
          valueFrom:
            secretKeyRef:
              name: rabbitmq
              key: username
        volumeMounts:
        - mountPath: /var/lib/rabbitmq
          name: rabbitmq-data
      volumes:
      - name: rabbitmq-data
        persistentVolumeClaim:
          claimName: rabbitmq-data

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    stack: kompassi
    component: rabbitmq
  name: rabbitmq-data
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1000Mi

---
apiVersion: v1
kind: Secret
metadata:
  name: rabbitmq
  labels:
    stack: kompassi
    component: rabbitmq
  annotations:
    secret-generator.v1.mittwald.de/autogenerate: password
type: Opaque
data:
  # username: kompassi
  username: a29tcGFzc2k=


##############
# POSTGRESQL #
##############
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  labels:
    stack: kompassi
    component: postgres
spec:
  ports:
  - port: 5432
    targetPort: 5432
  selector:
    stack: kompassi
    component: postgres

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
spec:
  selector:
    matchLabels:
      stack: kompassi
      component: postgres
  replicas: 1
  template:
    metadata:
      labels:
        stack: kompassi
        component: postgres
    spec:
      containers:
      - name: master
        image: postgres
        resources: {}
        ports:
        - containerPort: 5432
        env:
        - name: POSTGRES_DB
          value: kompassi
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: postgres
              key: username
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres
              key: password
        volumeMounts:
        - mountPath: /var/lib/postgresql/data
          name: postgres-data
        readinessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - kompassi
          initialDelaySeconds: 3
          periodSeconds: 3
        livenessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - kompassi
          initialDelaySeconds: 30
          periodSeconds: 30
      volumes:
      - name: postgres-data
        persistentVolumeClaim:
          claimName: postgres-data

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    stack: kompassi
    component: postgres
  name: postgres-data
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1000Mi

---
apiVersion: v1
kind: Secret
metadata:
  name: postgres
  labels:
    stack: kompassi
    component: postgres
  annotations:
    secret-generator.v1.mittwald.de/autogenerate: password
type: Opaque
data:
  # username: kompassi
  username: a29tcGFzc2k=


#########################
# GUNICORN (Web server) #
#########################
---
apiVersion: v1
kind: Service
metadata:
  name: kompassi
  labels:
    stack: kompassi
    component: kompassi
spec:
  ports:
  - port: 8000
    targetPort: 8000
  selector:
    stack: kompassi
    component: kompassi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kompassi
spec:
  selector:
    matchLabels:
      stack: kompassi
      component: kompassi
  replicas: 1
  template:
    metadata:
      labels:
        stack: kompassi
        component: kompassi
    spec:
      containers:
      - name: master
        image: tracon/kompassi:staging
        resources: {}
        ports:
        - containerPort: 8000
        env:
        - name: KOMPASSI_POSTGRESQL_HOSTNAME
          value: postgres
        - name: KOMPASSI_POSTGRESQL_DATABASE
          value: kompassi
        - name: KOMPASSI_POSTGRESQL_USERNAME
          valueFrom:
            secretKeyRef:
              name: postgres
              key: username
        - name: KOMPASSI_POSTGRESQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres
              key: password
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: kompassi
              key: secretKey
        - name: ALLOWED_HOSTS
          value: "*"
        volumeMounts:
        - mountPath: /usr/src/app/media
          name: kompassi-media
        livenessProbe:
          httpGet:
            path: /api/v1/status
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 5
        readinessProbe:
          httpGet:
            path: /api/v1/status
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: kompassi-media
        persistentVolumeClaim:
          claimName: kompassi-media

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    stack: kompassi
    component: postgres
  name: kompassi-media
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1000Mi

---
apiVersion: v1
kind: Secret
metadata:
  name: kompassi
  labels:
    stack: kompassi
  annotations:
    secret-generator.v1.mittwald.de/autogenerate: secretKey
type: Opaque
data: {}
